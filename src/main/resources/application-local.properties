# Staging Environment Configuration
# Use this profile for staging environment that mirrors production

# Database Configuration (Staging PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/safesnapdb
spring.datasource.username=safesnap
spring.datasource.password=safesnap123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# AWS S3 Configuration (Staging bucket)
aws.access-key-id=${AWS_ACCESS_KEY_ID}
aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}
aws.region=${AWS_REGION}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:}


# Google Vision API Configuration (Real API with staging credentials)
google.vision.enabled=${GOOGLE_VISION_ENABLED:true}
google.vision.project-id=${GOOGLE_CLOUD_PROJECT_ID}
google.vision.credentials-path=${GOOGLE_APPLICATION_CREDENTIALS}
google.vision.mock-mode=false

# OpenAI Configuration (Real API with staging key)
openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1/chat/completions
openai.model=${OPENAI_MODEL:gpt-3.5-turbo}
openai.max-tokens=${OPENAI_MAX_TOKENS:1200}
openai.temperature=${OPENAI_TEMPERATURE:0.3}
openai.enabled=true
openai.mock-mode=false

# OpenAI Rate Limiting (Production-like limits)
openai.rate-limit.requests-per-minute=${OPENAI_RATE_LIMIT_RPM:200}
openai.rate-limit.tokens-per-minute=${OPENAI_RATE_LIMIT_TPM:400000}

# RCA Generation Configuration
rca.auto-generate=true
rca.timeout-minutes=5

# JWT Configuration
jwt.secret=uqGxrUwv74rDuyxWE7c1I2VuCugiCnhV11FS3X2PxvU=
jwt.expiration=86400000

# Logging Configuration (Production-like)
logging.level.com.safesnap=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=ERROR

# Rate Limiting Configuration (Enabled)
rate-limiting.enabled=true
rate-limiting.test-mode=false

# Monitoring Configuration (Full monitoring)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

\\

# Database Connection Pool (Optimized for staging)
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
