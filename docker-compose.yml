services:
  db:
    image: postgres:15
    container_name: safesnap-db
    restart: always
    environment:
      POSTGRES_USER: safesnap
      POSTGRES_PASSWORD: safesnap123
      POSTGRES_DB: safesnapdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - safesnap-network

  # LocalStack - Mock AWS Services (S3, etc.)
  localstack:
    image: localstack/localstack:3.0
    container_name: safesnap-localstack
    restart: unless-stopped
    ports:
      - "4566:4566"  # LocalStack main port
    environment:
      - SERVICES=s3  # Only enable S3 service
      - DEBUG=1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - SKIP_INFRA_DOWNLOADS=1
    volumes:
      - "./localstack-init:/etc/localstack/init/ready.d"  # Init scripts
    networks:
      - safesnap-network

  app:
    build: .
    container_name: safesnap-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      # Database connection
      - DB_URL=jdbc:postgresql://db:5432/safesnapdb
      - DB_USERNAME=safesnap
      - DB_PASSWORD=safesnap123
      - SPRING_PROFILES_ACTIVE=docker
      
      # AWS credentials for LocalStack
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET_NAME=safesnap-dev-bucket
      - AWS_ENDPOINT_URL=http://localstack:4566  # Point to LocalStack
      
      # Google Cloud credentials
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS:-}
      
      # JWT secret
      - JWT_SECRET=${JWT_SECRET:-uqGxrUwv74rDuyxWE7c1I2VuCugiCnhV11FS3X2PxvU=}
    volumes:
      # Mount Google Cloud credentials file if using service account JSON
      - ${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/dummy}:${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/dummy}:ro
    depends_on:
      - db
      - localstack
    networks:
      - safesnap-network

volumes:
  postgres_data:
  localstack_data:

networks:
  safesnap-network:
    driver: bridge
